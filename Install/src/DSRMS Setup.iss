; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "SIARD_KR"
#define MyAppDesktopName "행정정보데이터세트 이관도구"
#define MyApp2Name "행정정보데이터세트 삭제지원도구"
#define MyAppVersion "1.1"
#define MyAppPublisher "국가기록원 2020년 행정정보데이터세트 기록관리 체계구축"
#define MyAppURL "http://www.archives.go.kr/"
#define MyAppExeName "행정정보데이터세트 이관도구.exe"
#define MyApp2ExeName "행정정보데이터세트 삭제지원도구.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{5A067BF0-5958-4B2E-82B5-D5CA67C1202C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
;PrivilegesRequiredOverridesAllowed=commandline dialog 
OutputDir=D:\Siard_Jsmooth
OutputBaseFilename=SIARD_KR v1.1 Setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "korean"; MessagesFile: "compiler:Languages\Korean.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

;etc 폴더는 사용자 appdata/local/etc 경로(localappdata)에 설치하도록 추가 
;단, logging.properties는 프로그램 경로에 설치.
[Files]
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\LICENSE.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\README.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\RELEASE.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\log4j.properties"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\행정정보데이터세트 이관도구.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\행정정보데이터세트 이관도구_debug.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\eraser_gui\apps\*"; DestDir: "{app}\eraser_gui\apps"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\eraser_gui\행정정보데이터세트 삭제지원도구.exe"; DestDir: "{app}\eraser_gui"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\eraser_gui\행정정보데이터세트 삭제지원도구_debug.exe"; DestDir: "{app}\eraser_gui"; Flags: ignoreversion
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\etc\*"; DestDir: "{app}\etc"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\etc\logging.properties"; DestDir: "{app}\etc"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\lib\*"; DestDir: "{app}\lib"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\bin\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\doc\*"; DestDir: "{app}\doc"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\hxd\*"; DestDir: "{app}\hxd"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\testfiles\*"; DestDir: "{app}\testfiles"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\lenovo\Desktop\SIARD_KR_git\SIARD_KR\Install\src\java\*"; DestDir: "{app}\java"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "D:\Developments-202006-v3.9\Workspaces_svn\Install\src\log\*"; DestDir: "{app}\log"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{userdesktop}\{#MyAppDesktopName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userdesktop}\{#MyApp2Name}"; Filename: "{app}\eraser_gui\{#MyApp2ExeName}"; Tasks: desktopicon

;관리자권한 실행 제거  Flags : runascurrentuser 추가
[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: runascurrentuser nowait postinstall skipifsilent

;삭제시 메인 폴더 경로 전체 삭제.
[UninstallDelete]
Type: filesandordirs; Name: "{app}"

;디렉토리 권한 설정(everyone)
[dirs] 
Name: "{app}"; Permissions: everyone-full;

;삭제시 기존 프로그램 설치 유무 체크.
[Code]
function InitializeSetup(): Boolean;
var
     oldVersion: String;
     uninstaller: String;
     ErrorCode: Integer;
     vCurID      :String;
     vCurAppName :String;
begin
     vCurID:= '{#SetupSetting("AppId")}';
     vCurAppName:= '{#SetupSetting("AppName")}';
     //remove first "{" of ID
     vCurID:= Copy(vCurID, 2, Length(vCurID) - 1);
     //
     if RegKeyExists(HKEY_LOCAL_MACHINE,
       'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + vCurID + '_is1') then
     begin
       //개행문자 : #13#10
       if MsgBox(vCurAppName + ' 프로그램은 이미 설치되어있습니다. 기존 프로그램을 삭제하고 재설치 하시겠습니까?'+#13#10#13#10+'단, 삭제 시 기존 설정값 및 사용이력이 전부 삭제됩니다.(필요 시 먼저 백업 해주세요)',
           mbConfirmation, MB_YESNO) = IDYES then
         begin
             RegQueryStringValue(HKEY_LOCAL_MACHINE,
               'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\' + vCurID + '_is1',
               'UninstallString', uninstaller);
             ShellExec('runas', uninstaller, '/SILENT', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
             Result := True;
         end
         else
         begin
           Result := False;
         end                
       end
     else
     begin
       Result := True;
     end;
end;